object HelloWorld {
def main(args: Array[String]) {
      
      val list=List(1,2,2,3,4,5,5,7,19,10)
      val list1 = List(10,11,12,13,15,15)
      println(" " + lastNth (3,list)) 
      println( "True : " + isPrime(15) ) 
      
      
      var x: Int =0
      var y: Int =0

     println( "" + isCoprimeTo(x=3,y =4)) 
     println("Result of XOR OPERATION for true and true   -->"+xorop(true,true))
      
     println( "Result of AND OPERATION for true and true   --- " + ANDop(true,true))
     println( "Result of NAND OPERATION for false and false   --- " + NANDop(false,false)) 
     println( "Result of last    --- " + cal(list1)) 
}

def lastNth(x:Int ,y:List[Int]):Int={
  val z=10-x;    // get index number
  return y.init(z)       //return element
  
}
def isCoprimeTo(x:Int,y: Int): Boolean = gcd(x, y) == 1

def gcd(x: Int, y: Int) : Int = {
        if (x == 0) y
        else if (y == 0) x
        else if (x < y) gcd(x, y-x)
        else gcd(x-y,y)
      }

def isPrime(num: Int): Boolean = {
    
  var i:Int = 2

    while(i <= num / 2){
         if(num % i==0)
             return false;
         else
             i = i + 1;
    }

   return true
  
}
def xorop(x:Boolean,y:Boolean):Boolean={
  if(x==true)
    if(y==true)
      return false;
    else
      return true;
  else if(x==false)
       if(y==false)
         return false;
       else
         return true;
  else
    return true;
  
    }

def ANDop(x:Boolean,y:Boolean):Boolean={
  if(x==true)
    if(y==true)
      return true;
    else
      return false;
  else
    return false;    
    }

def NANDop(x:Boolean,y:Boolean):Boolean={
  var z=ANDop(x,y)
  if(z==true)
    return false;
  else
    return true;    
    }





def cal(y:List[Int]):Int={
//val z=mul(x+1,x+3,y)         //call for multipulication  
//val a=add(x,z,y)
//val b=sub(x+4,a,y)
//val c= div(x+2,b,y)
val s= y.init(0)*y.init(1)
val as= y.init(2)+ s
val asd =  as - y.init(3)
val asdf = asd * y.init(4)

return asdf
}



}

